import{a as S,S as q,i as d}from"./assets/vendor-tnUJPedx.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=n(r);fetch(r.href,o)}})();const w="49000091-3868361750e1c7c48df9380e6",v="https://pixabay.com/api/",x=40;async function p(e,t=1){if(!e.trim())throw new Error("Search query is empty!");const n={key:w,q:encodeURIComponent(e),image_type:"photo",orientation:"horizontal",safesearch:!0,page:t,per_page:x};try{return(await S.get(v,{params:n})).data}catch(s){throw console.error("Error fetching images:",s),s}}const f=document.querySelector(".gallery"),M=new q(".gallery a",{captionsData:"alt",captionDelay:250});function g(e,t=!1){t||(f.innerHTML="");const n=e.map(({webformatURL:s,largeImageURL:r,tags:o,likes:i,views:b,comments:E,downloads:P})=>`
        <div class="image-item">
            <a href="${r}" class="gallery-item">
                <img src="${s}" alt="${o}" />
            </a>
            <div class="metadata">
                <span>Likes: ${i}</span>
                <span>Views: ${b}</span>
                <span>Comments: ${E}</span>
                <span>Downloads: ${P}</span>
            </div>
        </div>
    `).join("");f.insertAdjacentHTML("beforeend",n),M.refresh()}function m(e){const t=document.querySelector(".error-message");t&&(t.textContent=e,t.style.display="block")}function h(){const e=document.querySelector("#loader");e&&(e.style.display="block")}function u(){const e=document.querySelector("#loader");e&&(e.style.display="none")}function y(e){const t=document.querySelector("#load-more");t&&(t.style.display=e?"block":"none")}const $=document.querySelector("#search-form"),A=document.querySelector("#search"),I=document.querySelector(".gallery"),a=document.createElement("button");a.id="load-more";a.textContent="Load more";a.style.display="none";a.style.margin="20px auto";a.style.padding="10px 20px";a.style.border="none";a.style.cursor="pointer";document.body.appendChild(a);let l="",c=1;const L=40;$.addEventListener("submit",async e=>{if(e.preventDefault(),l=A.value.trim(),!l){d.error({title:"Error",message:"Please enter a search query!"});return}c=1,I.innerHTML="",y(!1),h();try{const t=await p(l,c);u(),t.hits.length===0?m("Sorry, there are no images matching your search query. Please try again!"):(g(t.hits),t.totalHits>L&&y(!0))}catch{u(),m("Failed to fetch images. Please try again later."),d.error({title:"Error",message:"Failed to fetch images. Please try again later."})}});a.addEventListener("click",async()=>{c+=1,h();try{const e=await p(l,c);u(),g(e.hits,!0);const t=Math.ceil(e.totalHits/L);c>=t&&(y(!1),d.info({title:"Info",message:"We're sorry, but you've reached the end of search results."})),C()}catch{u(),m("Failed to fetch more images. Please try again later."),d.error({title:"Error",message:"Failed to fetch more images. Please try again later."})}});function C(){const e=document.querySelectorAll(".image-item");if(e.length>0){const t=e[0].getBoundingClientRect().height;window.scrollBy({top:t*2,behavior:"smooth"})}}
//# sourceMappingURL=index.js.map
